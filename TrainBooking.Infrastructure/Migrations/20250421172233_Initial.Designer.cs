// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrainBooking.Infrastructure.Data;

#nullable disable

namespace TrainBooking.Infrastructure.Migrations
{
    [DbContext(typeof(TrainBookingDbContext))]
    [Migration("20250421172233_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TrainBooking.Domain.Models.Carriage", b =>
                {
                    b.Property<int>("CarriageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarriageId"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("CarriageType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TrainId")
                        .HasColumnType("int");

                    b.HasKey("CarriageId")
                        .HasName("PK__Carriage__17FE2DD0FDCF172A");

                    b.HasIndex("TrainId");

                    b.ToTable("Carriage", (string)null);
                });

            modelBuilder.Entity("TrainBooking.Domain.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<string>("CardCvv")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("CardCVV");

                    b.Property<string>("CardDate")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payment__9B556A38697B1143");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("TrainBooking.Domain.Models.Route", b =>
                {
                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RouteId"));

                    b.Property<int>("EndStationId")
                        .HasColumnType("int");

                    b.Property<int>("StartStationId")
                        .HasColumnType("int");

                    b.Property<string>("VariantName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("RouteId")
                        .HasName("PK__Route__80979B4D90088008");

                    b.HasIndex("EndStationId");

                    b.HasIndex(new[] { "StartStationId", "EndStationId", "VariantName" }, "UQ_Route_StartEndVariant")
                        .IsUnique()
                        .HasFilter("[VariantName] IS NOT NULL");

                    b.ToTable("Route", (string)null);
                });

            modelBuilder.Entity("TrainBooking.Domain.Models.RouteStation", b =>
                {
                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<int>("StationId")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("ArrivesAt")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("DepartsAt")
                        .HasColumnType("time");

                    b.Property<int>("StationOrder")
                        .HasColumnType("int");

                    b.HasKey("RouteId", "StationId")
                        .HasName("PK__RouteSta__4E9A1126D7D673A4");

                    b.HasIndex("StationId");

                    b.HasIndex(new[] { "RouteId", "StationId" }, "idx_route_station");

                    b.ToTable("RouteStation", (string)null);
                });

            modelBuilder.Entity("TrainBooking.Domain.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<DateOnly>("ArrivedDate")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("ArrivedTime")
                        .HasColumnType("time");

                    b.Property<DateOnly>("DepartureDate")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("DepartureTime")
                        .HasColumnType("time");

                    b.Property<int>("TrainId")
                        .HasColumnType("int");

                    b.HasKey("ScheduleId")
                        .HasName("PK__Schedule__9C8A5B4998049185");

                    b.HasIndex("TrainId");

                    b.ToTable("Schedule", (string)null);
                });

            modelBuilder.Entity("TrainBooking.Domain.Models.SchedulePattern", b =>
                {
                    b.Property<int>("PatternId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatternId"));

                    b.Property<string>("DayParity")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DaysOfWeek")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("FrequencyType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TrainId")
                        .HasColumnType("int");

                    b.HasKey("PatternId")
                        .HasName("PK__Schedule__0A631B5288392C16");

                    b.HasIndex("TrainId");

                    b.ToTable("SchedulePattern", (string)null);
                });

            modelBuilder.Entity("TrainBooking.Domain.Models.Seat", b =>
                {
                    b.Property<int>("SeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeatId"));

                    b.Property<int>("CarriageId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("SeatNumber")
                        .HasColumnType("int");

                    b.Property<string>("SeatType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SeatId")
                        .HasName("PK__Seat__311713F35CA86FED");

                    b.HasIndex("CarriageId");

                    b.ToTable("Seat", (string)null);
                });

            modelBuilder.Entity("TrainBooking.Domain.Models.Station", b =>
                {
                    b.Property<int>("StationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StationId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StationName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("StationId")
                        .HasName("PK__Station__E0D8A6BD0307EB5E");

                    b.ToTable("Station", (string)null);
                });

            modelBuilder.Entity("TrainBooking.Domain.Models.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"));

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("SeatId")
                        .HasColumnType("int");

                    b.Property<decimal>("TicketPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("TripId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TicketId")
                        .HasName("PK__Ticket__712CC607B06F1D7F");

                    b.HasIndex("PaymentId");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("TripId");

                    b.HasIndex(new[] { "SeatId" }, "IX_Ticket_SeatId");

                    b.HasIndex(new[] { "UserId" }, "idx_ticket_user");

                    b.ToTable("Ticket", (string)null);
                });

            modelBuilder.Entity("TrainBooking.Domain.Models.Train", b =>
                {
                    b.Property<int>("TrainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrainId"));

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("RouteId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TrainId")
                        .HasName("PK__Train__8ED2723A20113DE3");

                    b.HasIndex("RouteId");

                    b.HasIndex(new[] { "Number" }, "UQ__Train__78A1A19D2C2E07DA")
                        .IsUnique();

                    b.ToTable("Train", (string)null);
                });

            modelBuilder.Entity("TrainBooking.Domain.Models.Trip", b =>
                {
                    b.Property<int>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TripId"));

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime");

                    b.Property<int>("EndStationId")
                        .HasColumnType("int");

                    b.Property<int>("StartStationId")
                        .HasColumnType("int");

                    b.Property<int?>("TrainId")
                        .HasColumnType("int");

                    b.HasKey("TripId")
                        .HasName("PK__Trip__51DC713E2F7223F2");

                    b.HasIndex("EndStationId");

                    b.HasIndex("StartStationId");

                    b.HasIndex("TrainId");

                    b.ToTable("Trip", (string)null);
                });

            modelBuilder.Entity("TrainBooking.Domain.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("RegistrationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("User");

                    b.HasKey("UserId")
                        .HasName("PK__User__1788CC4CBD8C199D");

                    b.HasIndex(new[] { "Login" }, "UQ__User__5E55825B1A74FCFF")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__User__A9D105341A7E32C7")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("TrainBooking.Domain.Models.Carriage", b =>
                {
                    b.HasOne("TrainBooking.Domain.Models.Train", "Train")
                        .WithMany("Carriages")
                        .HasForeignKey("TrainId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__Carriage__TrainI__4AB81AF0");

                    b.Navigation("Train");
                });

            modelBuilder.Entity("TrainBooking.Domain.Models.Route", b =>
                {
                    b.HasOne("TrainBooking.Domain.Models.Station", "EndStation")
                        .WithMany("RouteEndStations")
                        .HasForeignKey("EndStationId")
                        .IsRequired()
                        .HasConstraintName("FK__Route__EndStatio__4222D4EF");

                    b.HasOne("TrainBooking.Domain.Models.Station", "StartStation")
                        .WithMany("RouteStartStations")
                        .HasForeignKey("StartStationId")
                        .IsRequired()
                        .HasConstraintName("FK__Route__StartStat__412EB0B6");

                    b.Navigation("EndStation");

                    b.Navigation("StartStation");
                });

            modelBuilder.Entity("TrainBooking.Domain.Models.RouteStation", b =>
                {
                    b.HasOne("TrainBooking.Domain.Models.Route", "Route")
                        .WithMany("RouteStations")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__RouteStat__Route__66603565");

                    b.HasOne("TrainBooking.Domain.Models.Station", "Station")
                        .WithMany("RouteStations")
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__RouteStat__Stati__6754599E");

                    b.Navigation("Route");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("TrainBooking.Domain.Models.Schedule", b =>
                {
                    b.HasOne("TrainBooking.Domain.Models.Train", "Train")
                        .WithMany("Schedules")
                        .HasForeignKey("TrainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Schedule__TrainI__534D60F1");

                    b.Navigation("Train");
                });

            modelBuilder.Entity("TrainBooking.Domain.Models.SchedulePattern", b =>
                {
                    b.HasOne("TrainBooking.Domain.Models.Train", "Train")
                        .WithMany("SchedulePatterns")
                        .HasForeignKey("TrainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ScheduleP__Train__1EA48E88");

                    b.Navigation("Train");
                });

            modelBuilder.Entity("TrainBooking.Domain.Models.Seat", b =>
                {
                    b.HasOne("TrainBooking.Domain.Models.Carriage", "Carriage")
                        .WithMany("Seats")
                        .HasForeignKey("CarriageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Seat__CarriageId__4F7CD00D");

                    b.Navigation("Carriage");
                });

            modelBuilder.Entity("TrainBooking.Domain.Models.Ticket", b =>
                {
                    b.HasOne("TrainBooking.Domain.Models.Payment", "Payment")
                        .WithMany("Tickets")
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__Ticket__PaymentI__6383C8BA");

                    b.HasOne("TrainBooking.Domain.Models.Schedule", "Schedule")
                        .WithMany("Tickets")
                        .HasForeignKey("ScheduleId")
                        .IsRequired()
                        .HasConstraintName("FK_Ticket_Schedule");

                    b.HasOne("TrainBooking.Domain.Models.Seat", "Seat")
                        .WithMany("Tickets")
                        .HasForeignKey("SeatId")
                        .IsRequired()
                        .HasConstraintName("FK__Ticket__SeatId__5DCAEF64");

                    b.HasOne("TrainBooking.Domain.Models.Trip", "Trip")
                        .WithMany("Tickets")
                        .HasForeignKey("TripId")
                        .IsRequired()
                        .HasConstraintName("FK__Ticket__TripId__5EBF139D");

                    b.HasOne("TrainBooking.Domain.Models.User", "User")
                        .WithMany("Tickets")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Ticket__UserId__5CD6CB2B");

                    b.Navigation("Payment");

                    b.Navigation("Schedule");

                    b.Navigation("Seat");

                    b.Navigation("Trip");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TrainBooking.Domain.Models.Train", b =>
                {
                    b.HasOne("TrainBooking.Domain.Models.Route", "Route")
                        .WithMany("Trains")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__Train__RouteId__45F365D3");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("TrainBooking.Domain.Models.Trip", b =>
                {
                    b.HasOne("TrainBooking.Domain.Models.Station", "EndStation")
                        .WithMany("TripEndStations")
                        .HasForeignKey("EndStationId")
                        .IsRequired()
                        .HasConstraintName("FK__Trip__EndStation__59063A47");

                    b.HasOne("TrainBooking.Domain.Models.Station", "StartStation")
                        .WithMany("TripStartStations")
                        .HasForeignKey("StartStationId")
                        .IsRequired()
                        .HasConstraintName("FK__Trip__StartStati__5812160E");

                    b.HasOne("TrainBooking.Domain.Models.Train", "Train")
                        .WithMany("Trips")
                        .HasForeignKey("TrainId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__Trip__TrainId__5629CD9C");

                    b.Navigation("EndStation");

                    b.Navigation("StartStation");

                    b.Navigation("Train");
                });

            modelBuilder.Entity("TrainBooking.Domain.Models.Carriage", b =>
                {
                    b.Navigation("Seats");
                });

            modelBuilder.Entity("TrainBooking.Domain.Models.Payment", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("TrainBooking.Domain.Models.Route", b =>
                {
                    b.Navigation("RouteStations");

                    b.Navigation("Trains");
                });

            modelBuilder.Entity("TrainBooking.Domain.Models.Schedule", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("TrainBooking.Domain.Models.Seat", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("TrainBooking.Domain.Models.Station", b =>
                {
                    b.Navigation("RouteEndStations");

                    b.Navigation("RouteStartStations");

                    b.Navigation("RouteStations");

                    b.Navigation("TripEndStations");

                    b.Navigation("TripStartStations");
                });

            modelBuilder.Entity("TrainBooking.Domain.Models.Train", b =>
                {
                    b.Navigation("Carriages");

                    b.Navigation("SchedulePatterns");

                    b.Navigation("Schedules");

                    b.Navigation("Trips");
                });

            modelBuilder.Entity("TrainBooking.Domain.Models.Trip", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("TrainBooking.Domain.Models.User", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
